%!PS-Adobe-2.0
%%Title: /home/ec2-user/application-server-benchmarks/python_gevent/gevent_graph.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Nov 19 18:35:56 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/home/ec2-user/application-server-benchmarks/python_gevent/gevent_graph.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (EC2 Default User)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 19 18:35:56 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 1120 M
6276 0 V
stroke
LTb
714 1120 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1620 M
6276 0 V
stroke
LTb
714 1620 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 100) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2120 M
6276 0 V
stroke
LTb
714 2120 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 200) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2620 M
6276 0 V
stroke
LTb
714 2620 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 300) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3120 M
6276 0 V
stroke
LTb
714 3120 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 400) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3620 M
6276 0 V
stroke
LTb
714 3620 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 500) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 4120 M
6276 0 V
stroke
LTb
714 4120 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 600) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 4620 M
6276 0 V
stroke
LTb
714 4620 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 700) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1120 M
0 3500 V
stroke
LTb
714 1120 M
0 63 V
0 3437 R
0 -63 V
714 980 M
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTa
1411 1120 M
0 3500 V
stroke
LTb
1411 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 200) Cshow
1.000 UL
LTb
1.000 UL
LTa
2109 1120 M
0 3500 V
stroke
LTb
2109 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 300) Cshow
1.000 UL
LTb
1.000 UL
LTa
2806 1120 M
0 3500 V
stroke
LTb
2806 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 400) Cshow
1.000 UL
LTb
1.000 UL
LTa
3503 1120 M
0 3500 V
stroke
LTb
3503 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4201 1120 M
0 3500 V
stroke
LTb
4201 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 600) Cshow
1.000 UL
LTb
1.000 UL
LTa
4898 1120 M
0 3500 V
stroke
LTb
4898 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 700) Cshow
1.000 UL
LTb
1.000 UL
LTa
5595 1120 M
0 3500 V
stroke
LTb
5595 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 800) Cshow
1.000 UL
LTb
1.000 UL
LTa
6293 1120 M
0 3500 V
stroke
LTb
6293 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 900) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 1120 M
0 3500 V
stroke
LTb
6990 1120 M
0 63 V
0 3437 R
0 -63 V
0 -3577 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 4620 N
0 -3500 V
6276 0 V
0 3500 V
-6276 0 V
Z stroke
3852 4830 M
(Gevent) Cshow
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
1017 63 N
0 700 V
5670 0 V
0 -700 V
1017 63 L
Z stroke
1017 763 M
5670 0 V
1.000 UP
stroke
LT0
/Helvetica findfont 140 scalefont setfont
LTb
3285 693 M
("req_rate_localhost") Rshow
LT0
3369 693 M
399 0 V
714 1620 M
697 487 V
698 509 V
697 401 V
697 573 V
4201 1843 L
697 21 V
697 5 V
698 15 V
697 35 V
714 1620 Pls
1411 2107 Pls
2109 2616 Pls
2806 3017 Pls
3503 3590 Pls
4201 1843 Pls
4898 1864 Pls
5595 1869 Pls
6293 1884 Pls
6990 1919 Pls
3568 693 Pls
1.000 UP
1.000 UL
LT1
/Helvetica findfont 140 scalefont setfont
LTb
3285 553 M
("con_rate_localhost") Rshow
LT1
3369 553 M
399 0 V
714 1620 M
697 487 V
698 509 V
697 401 V
697 573 V
4201 1843 L
697 21 V
697 5 V
698 15 V
697 35 V
714 1620 Crs
1411 2107 Crs
2109 2616 Crs
2806 3017 Crs
3503 3590 Crs
4201 1843 Crs
4898 1864 Crs
5595 1869 Crs
6293 1884 Crs
6990 1919 Crs
3568 553 Crs
1.000 UP
1.000 UL
LT2
/Helvetica findfont 140 scalefont setfont
LTb
3285 413 M
("min_rep_rate_localhost") Rshow
LT2
3369 413 M
399 0 V
714 1597 M
697 412 V
698 579 V
697 424 V
697 355 V
4201 1120 L
697 0 V
697 0 V
698 0 V
697 0 V
714 1597 Star
1411 2009 Star
2109 2588 Star
2806 3012 Star
3503 3367 Star
4201 1120 Star
4898 1120 Star
5595 1120 Star
6293 1120 Star
6990 1120 Star
3568 413 Star
1.000 UP
1.000 UL
LT3
/Helvetica findfont 140 scalefont setfont
LTb
3285 273 M
("avg_rep_rate_localhost") Rshow
LT3
3369 273 M
399 0 V
714 1620 M
697 487 V
698 509 V
697 470 V
697 473 V
4201 1855 L
697 25 V
697 -121 V
698 63 V
697 29 V
714 1620 Box
1411 2107 Box
2109 2616 Box
2806 3086 Box
3503 3559 Box
4201 1855 Box
4898 1880 Box
5595 1759 Box
6293 1822 Box
6990 1851 Box
3568 273 Box
1.000 UP
1.000 UL
LT4
/Helvetica findfont 140 scalefont setfont
LTb
3285 133 M
("max_rep_rate_localhost") Rshow
LT4
3369 133 M
399 0 V
714 1644 M
697 512 V
698 496 V
697 551 V
697 434 V
698 -290 V
697 488 V
697 -126 V
698 664 V
697 29 V
714 1644 BoxF
1411 2156 BoxF
2109 2652 BoxF
2806 3203 BoxF
3503 3637 BoxF
4201 3347 BoxF
4898 3835 BoxF
5595 3709 BoxF
6293 4373 BoxF
6990 4402 BoxF
3568 133 BoxF
1.000 UP
1.000 UL
LT5
/Helvetica findfont 140 scalefont setfont
LTb
6120 693 M
("stddev_rep_rate_localhost") Rshow
LT5
6204 693 M
399 0 V
714 1129 M
697 31 V
698 -15 V
697 52 V
697 52 V
698 873 V
697 144 V
697 -101 V
698 215 V
697 -48 V
714 1129 Circle
1411 1160 Circle
2109 1145 Circle
2806 1197 Circle
3503 1249 Circle
4201 2122 Circle
4898 2266 Circle
5595 2165 Circle
6293 2380 Circle
6990 2332 Circle
6403 693 Circle
1.000 UP
1.000 UL
LT6
/Helvetica findfont 140 scalefont setfont
LTb
6120 553 M
("resp_time_localhost") Rshow
LT6
6204 553 M
399 0 V
714 1140 M
697 165 V
698 -26 V
697 352 V
697 410 V
698 2057 V
4898 2965 L
697 1269 V
6293 3028 L
697 -358 V
714 1140 CircleF
1411 1305 CircleF
2109 1279 CircleF
2806 1631 CircleF
3503 2041 CircleF
4201 4098 CircleF
4898 2965 CircleF
5595 4234 CircleF
6293 3028 CircleF
6990 2670 CircleF
6403 553 CircleF
1.000 UP
1.000 UL
LT7
/Helvetica findfont 140 scalefont setfont
LTb
6120 413 M
("net_io_localhost") Rshow
LT7
6204 413 M
399 0 V
714 1171 M
697 50 V
698 53 V
697 41 V
697 59 V
698 -181 V
697 3 V
697 -4 V
698 2 V
697 4 V
714 1171 TriU
1411 1221 TriU
2109 1274 TriU
2806 1315 TriU
3503 1374 TriU
4201 1193 TriU
4898 1196 TriU
5595 1192 TriU
6293 1194 TriU
6990 1198 TriU
6403 413 TriU
1.000 UP
1.000 UL
LT8
/Helvetica findfont 140 scalefont setfont
LTb
6120 273 M
("errors_localhost") Rshow
LT8
6204 273 M
399 0 V
714 1120 M
697 0 V
698 0 V
697 0 V
697 0 V
698 16 V
697 -16 V
697 90 V
698 -3 V
697 -21 V
714 1120 TriUF
1411 1120 TriUF
2109 1120 TriUF
2806 1120 TriUF
3503 1120 TriUF
4201 1136 TriUF
4898 1120 TriUF
5595 1210 TriUF
6293 1207 TriUF
6990 1186 TriUF
6403 273 TriUF
1.000 UL
LTb
714 4620 N
0 -3500 V
6276 0 V
0 3500 V
-6276 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
